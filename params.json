{
  "name": "Mkrsnapshot",
  "tagline": "Make an rsnapshot backup PDQ",
  "body": "# mkrsnapshot\r\n\r\nMake an rsnapshot PDQ\r\n\r\nKISS backup method,  I like to use at least two backup methods.\r\nOne can be complex, but I need one to be very simple stupid and bulletproof.\r\nSo I adapted some old shell scripts into a docker container with a\r\nshellscript that reads a CSV inventory file and does a simple rsnapshot based backup.\r\n\r\n### Usage\r\n\r\n```\r\nmake rsnapshot\r\n```\r\n\r\nit will prompt you for a path to your ssh keys, and ssh information about the remote host.\r\n\r\n### Example\r\n\r\n```\r\nmake example\r\n```\r\n\r\nwill setup your home folder as the location for the inventory file,\r\nand both the backups and snapshots directories, then simply edit the inventory file (or use `make new` ) inside your home directory and  `make rsnapshot`.\r\n\r\nAfterwards look inside of `~/backups` which contains backups.\r\n\r\nAnd `~/snapshots` which contains the snapshot hardlinks.\r\n\r\n#### WARNING\r\ndue to the nature of [hardlinks](http://linuxgazette.net/105/pitcher.html) these two folders must be placed on the same filesystem.\r\n\r\n\r\n### Inventory\r\n\r\nThe inventory file is merely a CSV file with username, hostname (or IP), port, and a path:\r\n\r\n```\r\n#USERNAME,IPorFQDN,PORT,PATH\r\nusername,192.168.51.186,2222,/path\r\nroot,example.com,2022,/etc\r\n```\r\n\r\nyou will be prompted for a location of this file, or you can copy the example and use it here:\r\n\r\n```\r\ncp -i inventory.example inventory\r\necho `pwd`/inventory > INVENTORY\r\n```\r\n\r\nI prefer to keep it outside of the git directory though. How about your home directory?\r\n\r\n```\r\ncp -i inventory.example $HOME/inventory\r\necho $HOME/inventory > INVENTORY\r\n```\r\n\r\nOr just use the `make example` from above, but I wanted to give you an idea of how to change the defaults.\r\n\r\n### New\r\n\r\n```\r\nmake new\r\n```\r\n\r\nThis command will prompt you for all the necessary components of another line in the inventory and write another line to your inventory,\r\nit will sort and uniq your inventory to prevent duplicates\r\n\r\n### Details\r\n\r\nNot much to explain here, everything happens in `start.sh`\r\n\r\nand the meat of the whole thing is really done by this for loop:\r\n\r\n```\r\nfor i in $(cat $INVENTORY);do echo $i|cut --output-delimiter=' ' -f1,2,3,4 -d','|awk '{print \"rsync -ave \\\"ssh -p \" $3 \"\\\" --relative \" $1 \"@\" $2 \":\" $4 \" /backups/\" $2 \"/\" }'>>/tmp/sync.sh ;done\r\n```\r\n\r\nWhy didn't I stick with a space separated file?  I didn't plan that far ahead when starting! :P  That would simplify the loop, but this works for now.  I can foresee going the other direction into a json inventory file as well.\r\nBut that makes it more complicated. Keep It Simple Stupid\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}